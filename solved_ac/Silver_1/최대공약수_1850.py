# 백준 - 실버1 - 최대공약수 - 1850 - 수학, 정수론, 유클리스 호제법 문제
'''
수학, 정수론, 유클리스 호제법 문제

처음에 '모든 자리가 1로만 이루어져있는 두 자연수 A와 B가 주어진다.' 이 부분이 이해가 잘 안가서 고생했다.
그냥 최대공약수로 구해진 값에 '1'을 곱하면 되는거였다... (입력이 1로만 주어지는 줄 알았다..)

파이썬 내장함수인 math의 gcd를 이용해서 문제를 풀었다.
유글리드 호제법으로 최대공약수를 구하면 되는 문제이다.
만약, 직접 gcd를 구현한다 하면 아래처럼 구하면 된다.

def Euclidean(a, b):
    while b != 0:
        [a, b] = [b, a%b]
    return a
출처 - https://namu.wiki/w/유클리드 호제법 여기서 보면 된다.
'''

from math import gcd

a, b = map(int, input().split())

# 테스트
# a, b = 3, 4 # 1
# a, b = 3, 6 # 111
# a, b = 500000000000000000, 500000000000000002 # 11

print('1' * gcd(a, b))
