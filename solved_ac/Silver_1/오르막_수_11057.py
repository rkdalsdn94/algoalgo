'''
dp 문제

dp 문제를 풀면 느끼는 거지만 점화식만 잘 고민하면 코드 짜는건 어렵지 않다.
해당 문제의 식은 이 전의 수를 더해가면서 갱신하면 된다.

n = 1
ㄴ> 0 1 2 3 4 5 6 7 8 9
ㄴ> [1, 1, 1, 1, 1, 1, 1, 1, 1, 1] => 10

n = 2
ㄴ>  00 01 02 03 04 05 06 07 08 09 -> 10 개
    11 12 13 14 15 16 17 18 19    ->  9 개
    22 23 24 26 27 28 29          ->  8 개
                .                 ->  7 개
                .                 ->  6 개
                .                 ->  5 개
ㄴ> [10, 9, 8, 7, 6, 5, 4, 3, 2, 1] 55가 나온다.

위를 수식으로 하면 이 전의 값을 더하면 된다. n_list[i] = n_list[i] + n_list[i - 1]
n의 자리수를 생각해야 돼서 제일 바깥에 n - 1번 반복을 추가하면 된다.
'''

n = int(input())

# 테스트
# n = 1 # 10
# n = 2 # 55
# n = 3 # 220

n_list = [1] * 10

for i in range(n - 1):
    for j in range(1, 10):
        n_list[j] += n_list[j - 1]

print(sum(n_list) % 10007)
