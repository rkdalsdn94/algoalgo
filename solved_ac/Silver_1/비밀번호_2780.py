# 백준 - 실버1 - 비밀번호 - 2780 - dp, 그래프 문제
'''
dp, 그래프 문제

n(비밀번호)의 길이를 구하는 문제인데, dp로 풀 수 있다.
첫 번째 위치인 1이 포함된 비밀번호가 되려면 (2가 올 수 있는 경우 + 4가 올 수 있는 경우) 이렇게 구할 수 있고,
두 번째 위치인 2가 포하된 비밀번호가 되려면 (1이 올 수 있는 경우 + 3이 올 수 있는 경우 + 5가 올 수 있는 경우) 이렇게 구할 수 있다.
이런 식으로 0부터 9까지의 경우를 모두 구해서 더하면 된다.
단, dp 리스트 변수를 그대로 이용할 경우 값이 이상해질 수 있으므로 temp를 같이 활용했다.

풀이 과정
    1. 입력을 받는다.
    2. dp를 만들어 1로 초기화한다.
    3. 1부터 n까지 반복문을 돌면서 temp를 만들어 각각의 값을 더해준다.
    4. dp를 temp로 초기화한다.
    5. dp의 합을 MOD로 나눈 값을 출력한다.
'''

t = int(input())
MOD = 1234567

for _ in range(t):
    n = int(input())
    dp = [1] * 10

    for i in range(1, n):
        temp = [0] * 10

        temp[0] = dp[7]
        temp[1] = (dp[2] + dp[4]) % MOD
        temp[2] = (dp[1] + dp[3] + dp[5]) % MOD
        temp[3] = (dp[2] + dp[6]) % MOD
        temp[4] = (dp[1] + dp[5] + dp[7]) % MOD
        temp[5] = (dp[2] + dp[4] + dp[6] + dp[8]) % MOD
        temp[6] = (dp[3] + dp[5] + dp[9]) % MOD
        temp[7] = (dp[4] + dp[8] + dp[0]) % MOD
        temp[8] = (dp[5] + dp[7] + dp[9]) % MOD
        temp[9] = (dp[6] + dp[8]) % MOD

        dp = temp

    print(sum(dp) % MOD)
