# 백준 - 골드4 - 카드 섞기 - 1091 - 구현, 시뮬레이션 문제
'''
구현, 시뮬레이션 문제

n = 카드의 개수
p = 플레이어에게 가야하는 카드 정보
s = 카드를 한 번 섞을 때 방법

의외로 까다로운 문제이다. 정답을 도출해나가는 알고리즘은 손으로 풀어보면 금방 풀 수 있다.
예제 1이 약간 속임수처럼 느껴지지만, 손으로 풀다보면 풀이 방법도 어느정도 생각할 수 있다.
copy를 잘 활용해서 값들을 변환하고 해당 값이 origin과 같으면 반복문을 종료하면 된다.
그 후 총 반복문을 몇 번 실행했는지 출력하면 되고, temp를 이용해 값을 계속 변환 했는데 처음 p의 값이랑 동일해지면
아무리 카드 덱을 섞어도 답을 구할 수 없어서 -1을 출력하면 된다.
'''

n = int(input())
p = list(map(int, input().split()))
s = list(map(int, input().split()))

# 테스트
# n = 3
# p = [2,0,1]
# s = [1,2,0] # 2
# n = 6
# p = [0,1,2,0,1,2]
# s = [1,4,0,3,2,5] # 0
# n = 3
# p = [1,0,2]
# s = [0,2,1] # -1
# n = 12
# p = [1,1,2,0,2,0,1,0,2,2,1,0]
# s = [5,0,9,7,1,8,3,10,4,11,6,2] # 59

card_deck = [0,1,2] * (n // 3)

res = 0
origin_p = p.copy()
temp = [0] * n

while p != card_deck:
    temp = [0] * n
    for i in range(n):
        temp[s[i]] = p[i]
    p = temp
    res += 1

    if temp == origin_p:
        res = -1
        break

print(res)
