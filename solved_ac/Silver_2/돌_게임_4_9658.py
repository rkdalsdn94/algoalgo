# 백준 - 실버2 - 돌 게임 4 - 9658 - dp 문제
'''
dp 문제

전에 풀었던 돌 게임 시리즈의 연속인 문제이다.
이 문제에선 돌은 1개, 3개, 4개 가져갈 수 있고, 전과 똑같이 마지막 돌을 가져가는 사람이 게임을 지게 된다.
시작은 상근이가 먼저 시작하고, 일부를 미리 계산해보면 다음과 같다.
    n = 1 -> 상근이 패배
    n = 2 -> 상근이 승리
    n = 3 -> 상근이 패배
    n = 4 -> 상근이 승리
    n = 5 -> 상근이 승리
    n = 6 -> 상근이 승리
이렇게 미리 정해둔 값으로 n - 1, n - 3, n - 4의 값이 0이면 현재 i의 값은 1로 바꾸면 된다. 즉, 상근이가 무조건 이길 수 있다.
마지막으로 dp[n]의 값이 1일 때 상근이의 승리로 출력하면 된다.
'''

n = int(input())

# 테스트
# n = 6 # SK

dp = [0] * (n + 5)
dp[2] = 1
dp[4] = 1
dp[5] = 1

for i in range(6, n + 1):
    if dp[i - 1] == 0 or dp[i - 3] == 0 or dp[i - 4] == 0:
        dp[i] = 1

print('SK' if dp[n] else 'CY')
