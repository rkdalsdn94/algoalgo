# 백준 - 11060 - 점프 점프 - 실버2 - dp 문제
'''
dp 문제

dp를 n 그대로 사용하기 위해 + 1 한 크기로 만든다음, (입력받을 때도 앞에 0을 추가해야 된다.) 값들은 999로 초기화 한다.(101로 했다가 틀렸었다.)
dp의 처음 부분(시작 위치, 1번째)를 0으로 초기화한다. 그 다음 1부터 n_list의 해당 값(+1) 만큼 반복하면서 dp를 초기화한다.
dp[n]의 값이 처음 초기화한 999면 끝에 도착할 수 없으므로 -1을 출력하고, 999가 아닌 값으로 되어 있다면 해당 숫자를 출력하면 된다.
'''

n = int(input())
n_list = [0] + list(map(int, input().split()))

# 테스트
# n = 10
# n_list = [0] + [1,2,0,1,3,2,1,5,4,2] # 5

dp = [999] * (n + 1)
dp[1] = 0

for i in range(1, n):
    for j in range(1, n_list[i] + 1):
        if i + j <= n:
            dp[i + j] = min(dp[i] + 1, dp[i + j])

if dp[n] != 999:
    print(dp[n])
else:
    print(-1)