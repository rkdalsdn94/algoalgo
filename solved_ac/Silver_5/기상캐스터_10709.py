'''
구현, 시뮬레이션 문제

처음에 문제를 이해하는데 시간이 좀 걸렸다.
근데 예제를 잘 보면서 생각해보니까 금방 답을 구할수 있었다.

문제를 다 풀고 다른 사람 풀이를 보니까 내가 너무 단순? 하게 푼거 같았다.
다른 사람들은 '.', 'c'를 검사하면서 답을 구했었다.
현재 내 코드에서 -1, 0 으로 초기화 하는 부분이 있는데 이 부분을 없어도 풀 수 있다.

우선 현재 코드에선 구름(c)과 아닌곳(.)을 기준으로 -1로 이루어진 res변수를 다시 초기화 했다.
그리고 다시 h, w 만큼 반복문을 돌면서 현재가 -1이면 넘어가고 아니면 다음 값이 0인지 체크 후
현재 상태에서 +1 을 했다.
-1을 먼저 검사했어서 이 경우를 통과하면 나머진 구름이 지나갈 수 있는 경우이다.
'''

# h, w = map(int, input().split())
# w_list = [ list(map(str, input())) for _ in range(h) ]

# 테스트
h, w = 3, 4
w_list = [ ['c', '.', '.', 'c'], ['.', '.', 'c', '.'], ['.', '.','.','.'] ]
h, w = 6, 8
w_list = [['.','c','.','.','.','.','.','.'], ['.','.','.','.','.','.','.','.'],
        ['.','c','c','c','.','.','c','.'], ['.','.','.','.','c','.','.','.'],
        ['.','.','c','.','c','c','.','.'], ['.','.','.','.','c','.','.','.']]

res = [ [-1] * w for _ in range(h) ]

for i in range(h):
    for j in range(w):
        if w_list[i][j] == '.':
            res[i][j] = -1
        if w_list[i][j] == 'c':
            res[i][j] = 0

for i in range(h):
    for j in range(w - 1):
        if res[i][j] == -1:
            continue
        if res[i][j + 1] != 0 :
            res[i][j + 1] = res[i][j] + 1

for i in range(h):
    print(*res[i])
