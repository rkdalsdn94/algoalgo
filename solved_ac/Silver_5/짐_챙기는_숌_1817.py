# 백준 - 실버5 - 짐 챙기는 숌 - 1817 - 구현, 그리디 문제
'''
구현, 그리디 문제

그리디하게 풀면 된다. 예제에도 있지만 n, m을 입력받고 n이 0일경우 바로 종료시켜줘야 된다.
안그러면 EOFError가 나온다.

풀이 과정
1. input을 잘 입력받고, n이 0일 경우 프로그램을 종료 시킨다. 0이 아니면 n_list도 입력 받는다.
2. 박스에 넣을 수 있는 최대 무게의 숫자를 비교할 temp와 정답을 출력할 res를 각각 0과 1로 초기화 한다. (박스는 최소 1부터 시작한다. 그래서 1로 초기화)
3. 책의 개수만큼 반복문을 시작한다.
    3.1. temp에 현재 책의 무게를 temp에 더해가면서 해당 값이 박스의 최대 무게를 넘는지 검사한다.
        넘었을 경우 : 박스를 새로 꺼내고 해당 박스에 현재 책을 담는다. (res를 1 더하고, temp를 i로 바꾼다.)
        안 넘었을 경우 : 안 넘으면 해당 박스에 계속 받는다. (temp += i)
4. res를 출력한다.
'''

n, m = map(int, input().split())

if n == 0:
    print(0)
    exit(0)

n_list = list(map(int, input().split()))

# 테스트
# n, m = 6, 10
# n_list = [5,5,5,5,5,5] # 3
# n, m = 5, 100
# n_list = [51,51,51,51,51] # 5
# n, m = 6, 8
# n_list = [1,1,1,7,7,7] # 4
# n, m = 11, 12
# n_list = [12,1,11,2,10,3,4,5,6,6,1] # 6
# n, m = 0, 7
# n_list = []
# if n == 0:
#     print(0)
#     exit(0)

temp = 0
res = 1

for i in n_list:
    if temp + i <= m:
        temp += i
    else:
        res += 1
        temp = i

print(res)
