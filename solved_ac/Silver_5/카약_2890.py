# 백준 - 실버5 - 카약 - 2890 - 구현, 문자열, 정렬 문제
'''
구현, 문자열, 정렬 문제

문제 분류에서 정렬이 들어가지만, 정렬을 사용하지 않고 풀었다.

풀이 과정
    1. 입력 받기
    2. 각 행의 끝에서부터('F'를 빼고 시작하기 위해 c - 2로 시작) 시작하여 랭크를 세어준다.
        2.1. 랭크를 세어줄 때, 랭크가 있는 경우에만 랭크를 세어준다.
             이 부분을 flag 변수를 통해 구분하였다.
             flag가 없이 풀려고 하면 2번째 예제의 답이 이상하게 나온다.
    3. 결과 출력
'''

r, c = map(int, input().split())
r_list = [input() for _ in range(r)]

# 테스트
# r, c = 10, 10
# r_list = [
#     'S.....111F', 'S....222.F', 'S...333..F', 'S..444...F',
#     'S.555....F', 'S666.....F', 'S.777....F', 'S..888...F',
#     'S...999..F', 'S........F'
# ] # 1  \  2  \  3  \  4  \  5  \  4  \  3
# r, c = 10, 15
# r_list = [
#     'S..........222F', 'S.....111.....F', 'S...333.......F',
#     'S...555.......F', 'S.......444...F', 'S.............F',
#     'S......777....F', 'S..888........F', 'S........999..F',
#     'S...666.......F'
# ] # 5  \  1  \  6  \  3  \  6  \  6  \  4  \  7  \  2

rank = 1
res = [0] * 10

for i in range(c - 2, 0, -1):
    flag = 0

    for j in range(r):
        if r_list[j][i] != '.' and res[int(r_list[j][i])] == 0:
            res[int(r_list[j][i])] = rank
            flag = 1

    if flag:
        rank += 1

for i in range(1, 10):
    print(res[i])
