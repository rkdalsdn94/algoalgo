# 백준 - 브론즈1 - 머신 코드 - 2929 - 구현, 문자열, 파싱 문제
'''
구현, 문자열, 파싱 문제

문제의 핵심은 '4의 배수가 아닐 경우 대문자가 나올 때 대문자의 위치가 4의 배수가 되게 끔 해야 된다.
즉, 문제 예제 중 'EaEbFabG' 가 있을 때 'Ea..Eb..Fab..G' 이렇게 하면 된다.
    - 문제를 제대로 파악하지 않고 이 부분을 착각해서 'G...' 까지 구했다가 틀렸다.

풀이 과정
 - 문자열의 길이만큼 반복문을 돌면서 다음의 과정을 수행한다.
    - 대문자가 나올 때 해당 대문자의 인덱스가 4의 배수인지 체크한다.
        - 4의 배수가 아니라면 4의 배수가 될 때 까지 res를 1씩 증가시킨다. 이때 현재 반복중인 i번째 인덱스와 res를 더한 값이 4의 배수인지 확인해야 된다.
            - i와 res의 의미는 현자 글자와 추가된 글자를 더한 값이다.
            - 'EaEbFabG'를 보면 2번째 인덱스의 'E'가 대문자인데, 4의 배수가 아니므로 2를 더하고,
            - 이후 'F'의 인덱스가 4인데 res에서 2 글자를 더했으므로 4 + 2 = 6 은 4의 배수가 아니므로 2를 더하고,
            - 마지막 'G'의 인덱스가 7이지만 앞서 더한 4글자 res를 더하면 11이므로 4의 배수가 아니여서 1을 더하면 총 5가 된다.

        - 4의 배수이면 넘어감
 - res를 출력하면 된다.
'''

word = input()

# 테스트
# word = 'Abcd' # 0
# word = 'EaEbFabG' # 5
# word = 'AbcbBccCDefgh' # 4

res = 0

for i in range(len(word)):
    if word[i].isupper(): # 대문자 일 경우
        while (i + res) % 4 != 0: # 4의 배수가 아닐 경우 res 1씩 증가, (현재 글자 + 추가된 글자) % 4 == 0 이 될 때 까지
            res += 1

print(res)
