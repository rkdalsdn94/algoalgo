# 백준 - 브론즈1 - GCD - 5344 - 단순 수학, 정수론, 유클리드 호제법 문제
"""
단순 수학, 정수론, 유클리드 호제법 문제

[핵심 아이디어]
    1. 두 수의 최대공약수(GCD)를 구하기 위해 유클리드 호제법을 활용한다.
    2. Python의 math 라이브러리에 구현된 gcd 함수를 사용하여 간결하게 해결한다.
    3. 여러 개의 테스트 케이스를 효율적으로 처리하기 위해 입력값을 적절히 파싱한다.

[풀이 과정]
    1. 테스트 케이스의 개수 n을 입력받는다.
    2. n개의 줄에 걸쳐 각 테스트 케이스의 두 정수를 입력받아 리스트로 저장한다.
    3. 각 테스트 케이스마다 두 정수의 최대공약수를 계산하여 출력한다.
    4. Python의 math.gcd() 함수를 사용하여 최대공약수를 효율적으로 구한다.
       (내부적으로 유클리드 호제법을 구현하여 시간 복잡도는 O(log(min(a, b)))이다.)
"""

from math import gcd

n = int(input())
n_list = [list(map(int, input().split())) for _ in range(n)]

# 테스트
# n = 3
# n_list = [[54, 24], [33, 22], [41, 103]] # 6  \  11  \  1

for i, j in n_list:
    print(gcd(i, j))
