# 백준 - 브론즈1 - 드랍 더 비트 - 32343 - 그리디, 완전 탐색, 비트 마스킹 문제
'''
그리디, 완전 탐색, 비트 마스킹 문제

풀이 과정
    1. 두 N자리 이진수 x, y에 대해 XOR 연산의 최댓값을 구하는 문제
    2. x는 1이 a개, y는 1이 b개 있음 (각각 앞자리가 0일 수 있음)
    3. 두 가지 케이스로 나누어 해결
       - Case 1: n ≥ a + b일 때 (1의 개수 합이 전체 자릿수 이하)
       - Case 2: n < a + b일 때 (1의 개수 합이 전체 자릿수 초과)
    4. 각 케이스에 따라 최댓값 계산

풀이 방법
    1. Case 1: n ≥ a + b인 경우
        - x와 y의 1들을 서로 다른 위치에 배치
        - 최댓값을 위해 왼쪽(상위 비트)부터 1을 채움
        - 비트 연산(|=)을 통해 필요한 위치에 1을 설정
    2. Case 2: n < a + b인 경우
        - 모든 비트를 1로 초기화
        - x와 y가 모두 1인 위치는 XOR 결과가 0
        - 오른쪽(하위 비트)부터 (a + b - n)개의 비트를 0으로 설정
    3. 결과 출력
        - 계산된 최댓값을 10진수로 출력
'''

n = int(input())
a, b = map(int, input().split())

# 테스트
# n = 2
# a, b = 1, 1 # 3
# n = 3
# a, b = 2, 2 # 6

if n >= a + b:
    res = 0
    for i in range(n - 1, n - a - b - 1, -1):
        res |= 1 << i
else:
    res = (1 << n) - 1
    for i in range(a + b - n):
        res ^= 1 << i

print(res)
