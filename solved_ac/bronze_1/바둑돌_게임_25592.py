# 백준 - 브론즈1 - 바둑돌 게임 - 25592 - 수학, 구현, 시뮬레이션 문제
'''
수학, 구현, 시뮬레이션 문제

두 명이 번갈아 바둑돌을 가져가는 게임이다.
단, 돌을 가져갈 때 이전 사람이 가져간 갯수보다 1개 더 가져가야 된다.
    ex) 첫 번째 1개를 가져가면 두 번째는 2개 세 번째는 3개 이런 식으로 가져갈 수 있다.
위와 같은 식으로 차례를 반속해서 진행하는데, 자신의 차례에 정해진만큼의 바둑돌을 못 가져간 사람이 게임에서 지게 된다.
이 게임에서 푸앙이가 무조건 이길 수 있게 해야 된다.
푸앙이가 먼저 게임을 시작한다.

풀이 과정
 - while 문으로 1씩 증가하는 변수로 n을 빼면 된다.
 - 위 과정을 반복하다가 n이 음수가 되면 그 값을 절댓값으로 출력하면 된다.
    - 단, temp가 2로 나누어 떨어지는지 검사해야 된다.
    - n이 음수가 될 때 2로 나누어 떨어지면 어차피 푸앙이가 이긴다.
    - 근데 코드에선 temp를 + 1 상태에서 n이 음수로 떨어지는지 검사하니까 % 2가 0이 아니여야지 푸앙이가 이긴다.
    - 즉, % 2가 != 0 이 조건을 만족해야 abs를 통해 출력하고, 아니면 0을 출력하면 된다.
'''

n = int(input())

# 테스트
# n = 4 # 2
# n = 7 # 0

temp = 1
while 1:
    n -= temp

    if n < 0:
        if temp % 2 != 0:
            print(abs(n))
        else:
            print(0)
        break
    temp += 1
