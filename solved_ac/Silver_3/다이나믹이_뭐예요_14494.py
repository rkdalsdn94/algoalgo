# 백준 - 실버3 - 다이나믹이 뭐예요 - 14494 - dp 문제
'''
dp 문제

문제에 주어진 dp 그대로 풀면 된다.
' D[i][j] = (i, j)에 도달하는 누적 경우의 수 = D[i-1][j] + D[i][j-1]를 세워서 해결할 수도 있죠. '
위 경우를 신경쓰고 반복문을 돌리면 된다.
'''

n, m = map(int, input().split())

# 테스트
# n, m = 3, 2 # 5
# n, m = 4, 5 # 129
# n, m = 1000, 1000 # 910657857

dp = [ [0] * (m + 1) for _ in range(n + 1) ]
dp[0][0] = 1

for i in range(1, n + 1):
    for j in range(1, m + 1):
        dp[i][j] = (dp[i - 1][j] + dp[i][j - 1] + dp[i - 1][j - 1]) % 1000000007

print(dp[n][m])
