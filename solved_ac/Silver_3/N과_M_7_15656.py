# 백준 - 실버3 - N과 M 7 - 15656 - 백 트래킹 문제
'''
백 트래킹 문제

기존의 풀었던 N과 M 문제처럼 백 트래킹을 이용해서 풀면 된다.
'''

n, m = map(int, input().split())
n_list = sorted(list(map(int, input().split())))

# 테스트
# n, m = 3, 1
# n_list = sorted([4, 5, 2]) # 2  4  5
# n, m = 4, 2
# n_list = sorted([9, 8, 7, 1])
# '''
#     1 1
#     1 7
#     1 8
#     1 9
#     7 1
#     7 7
#     7 8
#     7 9
#     8 1
#     8 7
#     8 8
#     8 9
#     9 1
#     9 7
#     9 8
#     9 9
# '''
# n, m = 3, 3
# n_list = sorted([1231, 1232, 1233])
# '''
#     1231 1231 1231
#     1231 1231 1232
#     1231 1231 1233
#     1231 1232 1231
#     1231 1232 1232
#     1231 1232 1233
#     1231 1233 1231
#     1231 1233 1232
#     1231 1233 1233
#     1232 1231 1231
#     1232 1231 1232
#     1232 1231 1233
#     1232 1232 1231
#     1232 1232 1232
#     1232 1232 1233
#     1232 1233 1231
#     1232 1233 1232
#     1232 1233 1233
#     1233 1231 1231
#     1233 1231 1232
#     1233 1231 1233
#     1233 1232 1231
#     1233 1232 1232
#     1233 1232 1233
#     1233 1233 1231
#     1233 1233 1232
#     1233 1233 1233
# '''

res = []

def back_tracking(depth):
    if depth == m:
        print(*res)
        return

    for i in range(n):
        res.append(n_list[i])
        back_tracking(depth + 1)
        res.pop()

back_tracking(0)
