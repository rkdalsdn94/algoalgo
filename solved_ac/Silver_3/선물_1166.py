# 백준 - 실버3 - 선물 - 1166 - 이진 탐색 문제
'''
이진 탐색 문제

[핵심 아이디어]
    1. 정육면체 상자의 최대 크기를 구하는 문제이므로, 상자의 크기를 이진 탐색으로 찾을 수 있다.
    2. 상자의 크기가 실수값이고 오차 범위가 10^-9까지 허용되므로, 충분한 정밀도를 보장하기 위해 고정된 반복 횟수(100회)를 사용한다.
    3. 각 차원(길이, 너비, 높이)에 대해 현재 크기로 나눈 몫을 구하고 이들을 곱하여 총 들어갈 수 있는 상자의 개수를 계산한다.

[풀이 과정]
    1. 큰 상자(L x W x H)에 들어갈 수 있는 작은 상자의 최대 크기를 이진 탐색으로 찾는다.
      - 초기 탐색 범위: 0 ~ max(L, W, H)
      - 중간값(mid)을 현재 시도할 상자의 크기로 설정
    2. 현재 크기(mid)로 N개의 상자를 만들 수 있는지 확인
      - 각 차원별로 들어갈 수 있는 상자 수 계산: L//mid, W//mid, H//mid
      - 총 들어갈 수 있는 상자 개수 = (L//mid) * (W//mid) * (H//mid)
      - N개 이상 들어갈 수 있으면 더 큰 크기 가능(left = mid)
      - N개 미만이면 크기를 줄여야 함(right = mid)
    3. 정밀도 보장을 위한 반복
      - 100회 반복으로 충분한 정밀도(10^-9) 확보
      - 각 반복마다 탐색 범위가 절반으로 감소
'''


n, l, w, h = map(int, input().split())

# 테스트
# n, l, w, h = 10, 4, 2, 10 # 2.0
# n, l, w, h = 2, 2, 2, 2 # 1.0
# n, l, w, h = 1, 12, 47, 5 # 5.0
# n, l, w, h = 77, 146, 523, 229 # 52.300000000000004

left, right = 0, max(l, w, h)

for _ in range(100):
    mid = (left + right) / 2

    if (l // mid) * (w // mid) * (h // mid) >= n:
        left = mid
    else:
        right = mid

print(left)
