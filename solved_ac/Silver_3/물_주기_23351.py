# 백준 - 물 주기 - 실버3 - 23351 - 구현, 그리디, 정렬 문제
'''
구현, 그리디, 정렬 문제

문제 중 적혀있는 순서를 차례대로 구현하면 된다.
1. 일직선으로 놓여진 N개의 화분에 캣닢이 하나씩 심어져 있다. 각 화분은 초기에 K만큼의 수분을 머금고 있다. -> n_list = [k] * n
2. 매일 아래와 같은 일이 순서대로 일어난다. 
    2.1 랑이 집사가 연속된 A개의 화분에 물을 준다. 이 때 물을 준 화분의 수분은 B만큼씩 증가한다.
    2.2 모든 화분의 수분이 1씩 감소한다.
    2.3 수분이 0이 된 화분에 있는 캣닢은 죽는다.

풀이 과정
1. a만큼 반복하면서 n_list의 b를 더해준다.
    1.1 더해주는 순서는 수분이 낮은 순서부터 더해주는것이 좋다.
2. 하루마다 -1 씩해줘야 하니까 n리스트의 모든 인덱스를 - 1 해준다.
3. 오름차순으로 정렬을 해서 수분이 낮은 화분들을 앞에 올 수 있게 한다.
4. 위 과정이 끝나면 res에 1을 더하고, n_list에서 0이 생기기 전까지 반복한다.
5. n_list중 0이 생기면 while 문을 종료하고, res를 출력한다.
'''

n, k, a, b = map(int, input().split())

# 테스트
# n, k, a, b = 6,3,2,2 # 5
# n, k, a, b = 2,2,1,1 # 3

res = 0
n_list = [k] * n

while 0 not in n_list:
    for i in range(a):
        n_list[i] += b
    
    for i in range(n):
        n_list[i] -= 1
    
    n_list.sort()
    res += 1

print(res)
