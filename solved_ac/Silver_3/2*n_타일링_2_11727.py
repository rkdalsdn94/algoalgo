'''
dp 문제

2*n 타일링(boj - 11726) 문제에서 점화식을 수정하면 된다.
해당 문제에선 dp[i] - dp[i - 1] + dp[i - 2] 로 해결 가능한데,
이 문제에선 2 * 2의 도형이 추가 되었다. -> 이 전엔 (1*2, 2*1 두 모양이 끝)
그래서 해당 문제에서도 손으로 그려가면서 풀다보니 감이 왔다.

dp[0] = 0
dp[1] = 1
dp[2] = 3
dp[3] = 5
dp[4] = 11 여기서 느낌이 왔다.

위와 같은 식으로 해당 문제의 점화식을 세워보면
dp[i] = dp[i - 1] + (dp[i - 2] * 2) 가 나온다.
해당 식으로 n까지 반복문을 돈 후에, 10007을 나눈 후 dp[n]을 출력하면 된다!
 ㄴ> 반복문을 돌면서 10007을 나눠도 좋다.
'''

n = int(input())

# 테스트
# n = 2 # 3
# n = 8 # 171
# n = 12 # 2731

dp = [0] * (n + 2)

dp[1] = 1
dp[2] = 3

for i in range(3, n + 1):
    dp[i] = dp[i - 1] + dp[i - 2] * 2

print(dp[n] % 10007)
