# 백준 - 수열 - 실버3 - 2559 - 누적 합, 투 포인터, 슬라이딩 윈도우 문제
'''
누적 합, 투 포인터, 슬라이딩 윈도우 문제

슬라이딩 윈도우라는 알고리즘을 몰라도 문제를 풀 수 있다.
리스트 슬라이싱을 잘 활용해서 풀면 된다.

처음에 sum 함수로 문제를 풀었다가 시간 초과가 나왔다. 그래서 다른 사람들 코드를 찾아보니 처음에 시간 초과를 받았던거 같다.
어떻게 해결할지 풀이를 참고한 후 문제를 풀었는데, 다른 사람들의 코드와 거의 유사하다.
sum함수를 반복문마다 이용하는 방식이 아닌 k번째 전까지의 더한 값을 res의 첫 번째 인자로 넣은 후,
해당 값으로 빼기와 더하기를 이용하면서 마지막 출력할 때 최대값을 출력하면 통과할 수 있다.
'''

n, k = map(int, input().split())
n_list = list(map(int, input().split()))

# 테스트
# n, k = 10, 2
# n_list = [3, -2, -4, -9, 0, 3, 7, 13, 8, -3] # 21
# n, k = 10, 5
# n_list = [3, -2, -4, -9, 0, 3, 7, 13, 8, -3] # 31
# n, k = 10, 1
# n_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] # 10
# n, k = 2, 2
# n_list = [-100, -100] # -200
# n, k = 3, 1
# n_list = [-1, -2, -3] # -1

res = [ sum(n_list[:k]) ]

for i in range(n - k):
    res.append(res[i] - n_list[i] + n_list[i + k])

print(max(res))
