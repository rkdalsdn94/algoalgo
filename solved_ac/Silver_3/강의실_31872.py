# 백준 - 실버3 - 강의실 - 31872 - 그리디, 정렬 문제
'''
그리디, 정렬 문제

[핵심 아이디어]
    1. 모든 강의실을 방문하는 데 필요한 이동 거리를 계산한다.
    2. 순간이동은 시간이 소요되지 않으므로, 가장 긴 거리 k개를 순간이동으로 건너뛰는 것이 최적이다.
    3. 남은 거리들의 합이 최소 소요 시간이 된다.

[풀이 과정]
    1. 강의실 위치를 오름차순으로 정렬한다.
    2. 이동해야 하는 모든 거리를 계산한다:
       - 시작점(x=0)에서 첫 번째 강의실까지의 거리
       - 각 인접한 강의실 간의 거리
    3. 계산된 거리들을 오름차순으로 정렬한다.
    4. k개의 가장 긴 거리는 순간이동으로 건너뛸 수 있으므로, 가장 짧은 n-k개의 거리만 실제로 이동한다.
    5. 이 n-k개 거리의 합이 최소 소요 시간이다.
'''

n, k = map(int, input().split())
a = sorted(list(map(int, input().split())))

# 테스트
# n, k = 6, 3
# a = sorted([4, 9, 1, 14, 5, 6]) # 3
# n, k = 6, 0
# a = sorted([4, 9, 1, 14, 5, 6]) # 14
# n, k = 3, 1
# a = sorted([5, 3, 20]) # 5

distance = [a[0]]
for i in range(1, n):
    distance.append(a[i] - a[i - 1])

res = sum(sorted(distance)[:n - k])
print(res)
