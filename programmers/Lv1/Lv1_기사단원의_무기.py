# 프로그래머스 - Lv1 - 기사단원의 무기 - 수학, 완전 탐색 문제
'''
수학, 완전 탐색 문제

[핵심 아이디어]
    1. 약수의 개수를 효율적으로 계산하기 위해 제곱근까지 탐색
    2. 제곱근까지 탐색하면서 약수를 찾을 때마다 쌍을 고려하여 2개씩 증가 (단, 제곱수인 경우 중복을 제거).
    3. 약수의 개수가 제한 수치를 초과하면 대체 공격력을 사용

[풀이 과정]
    1. 1번부터 number번까지 각 기사 번호를 순회
    2. 각 기사 번호의 약수 개수를 효율적으로 계산하기 위해:
       - 1부터 해당 번호의 제곱근까지만 탐색
       - 나누어 떨어지는 수를 찾으면, 그 수와 몫이 서로 다른 약수이므로 2개의 약수를 찾은 상황
       - 단, 완전 제곱수의 경우 제곱근이 약수로 중복되므로 1개만 카운트
    3. 계산된 약수의 개수가 limit를 초과하면 power 값을, 그렇지 않으면 약수의 개수 사용
    4. 모든 기사의 무기 공격력을 합산하여 필요한 철의 무게를 계산
'''

def solution(number, limit, power):
    answer = 0

    for i in range(1, number + 1):
        measure = 0
        # 제곱근까지만 탐색하여 약수 개수를 계산
        for j in range(1, int(i ** 0.5) + 1):
            if i % j == 0:
                # j가 약수인 경우
                measure += 1

                # j와 i//j가 다른 경우(제곱근이 아닌 경우) 약수 쌍으로 2개 카운트
                if j != i // j:
                    measure += 1

        answer += power if limit < measure else measure

    return answer

print(solution(5, 3, 2) == 10)
print(solution(10, 3, 2) == 21)
