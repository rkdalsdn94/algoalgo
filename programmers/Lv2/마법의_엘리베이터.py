# 프로그래머스 - Lv2 - 마법의 엘리베이터 - 그리디, 구현 문제
"""
그리디, 구현 문제

[핵심 아이디어]
    1. 각 자릿수마다 0에 가까워지는 최적의 선택(올림 또는 내림)을 결정한다.
    2. 현재 자릿수의 숫자가 5보다 작으면 내림(빼기)이 유리하고, 5보다 크면 올림(더하기)이 유리하다.
    3. 5인 경우는 다음 자릿수에 따라 결정한다: 다음 자릿수가 5 이상이면 올림, 5 미만이면 내림.
    4. 각 선택에 따른 버튼 누름 횟수(마법의 돌 개수)를 계산하여 합산한다.

[풀이 과정]
    1. 입력된 층수(storey)의 각 자릿수를 끝 자리부터 확인한다.
    2. 현재 자릿수의 숫자가 5보다 작으면 해당 수만큼 -1 버튼을 누른다(내림).
    3. 현재 자릿수의 숫자가 5보다 크면 (10-해당 수)만큼 +1 버튼을 누르고 다음 자릿수에 1을 올린다(올림).
    4. 현재 자릿수의 숫자가 5이면, 다음 자릿수를 확인하여 결정한다.
    5. 모든 자릿수를 처리할 때까지 반복한다.
"""

def solution(storey):
    answer = 0

    while storey:
        digit = storey % 10  # 현재 자릿수의 숫자

        if digit < 5:  # 5보다 작으면 내림
            answer += digit
        elif digit > 5:  # 5보다 크면 올림
            answer += (10 - digit)
            storey += 10  # 다음 자릿수에 1 올림
        else:  # 5인 경우
            # 다음 자릿수 확인
            next_digit = (storey // 10) % 10
            if next_digit >= 5:  # 다음 자릿수가 5 이상이면 올림이 유리
                storey += 10
            answer += 5  # 어느 쪽이든 5번 버튼을 누름

        storey //= 10  # 다음 자릿수로 이동

    return answer

print(solution(16)) # 6
print(solution(2554)) # 16
