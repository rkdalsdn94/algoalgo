# 프로그래머스 - Lv2 - 카펫 - 수학, 완전 탐색 문제
"""
수학, 완전 탐색 문제

[핵심 아이디어]
    1. 노란색 격자가 가운데 위치하고, 갈색 격자가 테두리를 이루는 구조
    2. 노란색 격자의 약수 쌍을 구해 가로(x), 세로(y) 후보를 파악
    3. 테두리(갈색 격자)의 개수는 (가로+2)*2 + 세로*2 = 2*(가로+세로+2)
    4. 조건을 만족하는 가로, 세로 크기를 찾아 반환

[풀이 과정]
    1. 노란색 격자(yellow)의 약수 쌍을 구함
    2. 각 약수 쌍(x, y)에 대해:
       - x는 가로 길이 후보, y는 세로 길이 후보
       - 가로 길이는 세로 길이보다 크거나 같아야 함
       - (x+2)*2 + y*2 = brown 조건 확인 (테두리 격자 수 계산)
    3. 조건을 만족하는 경우, 실제 카펫 크기인 [x+2, y+2]를 반환
"""

def solution(brown, yellow):
    answer = []

    for i in range(yellow, 0, -1):
        if yellow % i == 0:
            x = i
            y = yellow // i

            if (x + 2) * 2 + y * 2 == brown:
                answer = [x + 2, y + 2]
                break

    return answer

print(solution(10, 2))  # [4,3]
print(solution(8, 1))  # [3,3]
print(solution(24, 24))  # [8,6]
